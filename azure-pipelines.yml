name: 1.0.$(Date:yyyyMMdd)$(Rev:.r)
# ASP.NET Core

# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
    branches:
        include:
        - master
    paths:
        include:
        - func/*
        - azure-pipelines.yml

pr:
    branches:
        include:
        - master
    paths:
        include:
        - func/*
        - azure-pipelines.yml

pool:
  vmImage: 'ubuntu-16.04'

variables:
  buildConfiguration: 'Release'

steps:

- script: echo Build number is $(Build.BuildNumber) hope it works...
  displayName: 'Displaying build number'

- script: docker build -f func/Dockerfile.build --build-arg VERSION=$(Build.BuildNumber) --build-arg BUILDCONFIG=$(buildConfiguration) -t $(dockerId)/dotnetcore-build:$(Build.BuildNumber) .
  displayName: 'Performing Docker build and test'

- script: |
    docker run --name dotnetcoreapp --rm -d $(dockerId)/dotnetcore-build:$(Build.BuildNumber)
    docker cp dotnetcoreapp:/app/BetterBookmarks.Functions.UnitTests/testresults $(System.DefaultWorkingDirectory)/testresults
    docker cp dotnetcoreapp:/out $(System.DefaultWorkingDirectory)/app
    docker stop dotnetcoreapp

# Publish Test Results
# Publish Test Results to Azure Pipelines/TFS
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'VSTest' # Options: JUnit, NUnit, VSTest, xUnit, cTest
    testResultsFiles: 'testresults/*.trx' 
    # searchFolder: 'func/test-results' # Optional
    mergeTestResults: true # Optional
    failTaskOnFailedTests: true # Optional
    #testRunTitle: # Optional
    #buildPlatform: # Optional
    #buildConfiguration: # Optional
    publishRunAttachments: true # Optional

- task: PublishCodeCoverageResults@1
  displayName: 'Publish coverage results'
  inputs:
    codeCoverageTool: 'cobertura'
    summaryFileLocation: 'testresults/coverage/coverage.cobertura.xml'

- script: |
    docker build -f func/BetterBookmarks.Functions/Dockerfile -t $(dockerId)/bb-func:$(Build.BuildNumber) .
    docker login -u $(dockerId) -p $pswd
    docker push $(dockerId)/bb-func:$(Build.BuildNumber)
  env:
    pswd: $(dockerPassword)
