# ASP.NET Core

# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
    branches:
        include:
        - master
    paths:
        include:
        - func/*
        - azure-pipelines.yml

pr:
    branches:
        include:
        - master
    paths:
        include:
        - func/*
        - azure-pipelines.yml

pool:
  vmImage: 'ubuntu-16.04'

variables:
  buildConfiguration: 'Release'

steps:
- script: |
    docker build -f func/Dockerfile.build --build-arg VERSION=$BUILD_BUILDID --build-arg BUILDCONFIG=$(buildConfiguration) -t $(dockerId)/dotnetcore-build:$BUILD_BUILDID .

- script: |
    echo "Starting container"
    docker run --name dotnetcoreapp --rm -d $(dockerId)/dotnetcore-build:$BUILD_BUILDID
    echo "Copying test results, coverage results and bits"
    docker cp dotnetcoreapp:/app/BetterBookmarks.Functions.UnitTests $(System.DefaultWorkingDirectory)/unittests
    echo "Test results copied"
    docker cp dotnetcoreapp:/out $(System.DefaultWorkingDirectory)/app
    echo "Bits copied, stopping container"
    docker stop dotnetcoreapp
    echo "Container stopped"
    ls -R $(System.DefaultWorkingDirectory)

# Publish Test Results
# Publish Test Results to Azure Pipelines/TFS
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'VSTest' # Options: JUnit, NUnit, VSTest, xUnit, cTest
    testResultsFiles: 'unittests/TestResults/*.trx' 
    # searchFolder: 'func/test-results' # Optional
    mergeTestResults: true # Optional
    failTaskOnFailedTests: true # Optional
    #testRunTitle: # Optional
    #buildPlatform: # Optional
    #buildConfiguration: # Optional
    publishRunAttachments: true # Optional

- task: PublishCodeCoverageResults@1
  displayName: 'publish coverage results'
  inputs:
    codeCoverageTool: 'cobertura'
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/unittests/coverage.cobertura.xml'

- script: |
    docker build -f func/BetterBookmarks.Functions/Dockerfile -t $(dockerId)/bb-func:$BUILD_BUILDID .
    docker login -u $(dockerId) -p $pswd
    docker push $(dockerId)/bb-func:$BUILD_BUILDID
  env:
    pswd: $(dockerPassword)
